#include <iostream>
#include <math.h>
#include <algorithm>
#include <vector>
#include <unordered_set>
#include <unordered_map>
#include <queue>
#include <stack>
using namespace std;

long long dfs(int n, vector<vector<int>>& rides) {
        if(n >= rides.size()) return 0;
        int p = rides[n][1] - rides[n][0] + rides[n][2];
        int n1 = n + 1;
        while(n1 < rides.size() && rides[n1][0] < rides[n][1]) n1++;
        return max(p + dfs(n1, rides), dfs(n + 1, rides));
    }

    long long maxTaxiEarnings(int n, vector<vector<int>>& rides) {
        sort(rides.begin(), rides.end(), [](vector<int>& v1, vector<int>& v2){
            return v1[0] != v2[0] ? v1[0] < v2[0] : v1[1] < v2[1];
        });
        return dfs(0, rides);
    }

int main() {
    vector<vector<int>> vec = {{46,60,11},{98,100,37},{5,82,25},{45,72,74},{94,96,29},{79,88,79},{11,28,68},{31,85,9},{71,76,5},{62,96,4},{45,98,22},{18,94,96},{73,81,19},{12,99,41},{29,97,100},{20,32,56},{38,61,40},{68,95,73},{45,63,90},{80,95,1},{15,53,4},{76,88,37},{91,97,78},{5,9,15},{93,99,90},{49,51,3},{83,88,38},{62,65,47},{67,95,97},{88,96,35},{93,96,26},{50,94,95},{33,51,67},{36,64,98},{35,53,54},{1,32,20},{96,98,13},{97,99,73},{91,96,31},{63,94,64},{4,54,6},{39,95,72},{15,97,69},{31,72,13},{45,70,82},{94,100,18},{32,82,28},{40,46,18},{66,81,82},{59,97,61},{95,99,11},{93,95,74},{55,60,47},{57,98,23},{72,96,2},{84,100,28},{27,65,61},{25,73,4},{57,66,12},{79,94,97},{93,97,7},{19,80,96},{76,93,97},{86,95,92},{62,66,47},{9,96,13},{83,91,42},{59,98,100},{28,36,56},{33,36,87},{48,93,48},{99,100,5},{47,97,67},{62,94,63},{91,92,50},{98,99,13},{7,59,83},{85,91,44},{42,62,27},{82,90,97},{28,37,42},{81,90,14},{38,78,80},{21,83,70},{99,100,34},{68,88,63},{57,71,82},{45,46,38},{34,51,26},{70,81,75},{21,70,32},{81,96,65},{52,73,47},{84,94,13},{31,76,28},{63,66,26},{65,97,26},{78,80,12},{3,24,10},{20,51,35}};
    int ans = maxTaxiEarnings(100, vec);
    
    return 0;
}